@startuml UC004
skinparam backgroundColor #F8FBFF
skinparam participant {
    BackgroundColor #E3F2FD
    BorderColor #1976D2
    FontColor #0D47A1
}
skinparam sequence {
    ArrowColor #1976D2
    LifeLineBackgroundColor #E8F5E8
    LifeLineBorderColor #4CAF50
}
skinparam shadowing true


title UC004 - Electronic Signature avec ePad

' Acteurs externes
actor "Cliint" as Cliint #LightGrein
actor "Manager KYC" as Manager #LightBlue
participant "ePad Signature" as ePad #LightYellow

' Couche présintation
box "Interface Utilisateur" #E8F5E8
    participant "Interface GFC" as WebUI #90EE90
    participant "API Gateway" as Gateway #98FB98
ind box

' Couche orchestration
box "Couche Orchestration" #FFF8DC
    participant "Orchestrateur\nKYC" as Orchestrator #FFE4B5
    participant "Manager\nFlux Métier" as FluxManager #F0E68C
ind box

' Services métier
box "Services Métier KYC" #F0F8FF
    participant "Service\nSignature" as SignatureService #87CEEB
    participant "Service\nDocumint" as DocumintService #4682B4
    participant "Service\nSécurité" as SecurityService #4169E1
    participant "Service\nValidation" as ValidationService #87CEFA
ind box

' Services technicals
box "Services Technicals" #FDF5E6
    participant "Service\nAudit" as AuditService #DEB887
    participant "Service\nNotification" as NotificationService #D2B48C
    participant "Cache\nRedis" as CacheService #CD853F
ind box

' Infrastructure
box "Infrastructure" #F5F5F5
    participant "Database de Données\nKYC" as DB #C0C0C0
    participant "Stockage\nDocumints" as Storage #A9A9A9
    participant "HSM\nSécurisé" as HSM #808080
ind box

== Préparation session signature ==

Manager -> WebUI : Initier session signature\npour client
activate Manager
activate WebUI

WebUI -> Gateway : POST /signature/session/init
activate Gateway

Gateway -> Orchestrator : initierSessionSignature()
activate Orchestrator

Orchestrator -> FluxManager : démarrerFluxSignature()
activate FluxManager

FluxManager -> SecurityService : verifiesrHabilitationsManager()
activate SecurityService
SecurityService -> DB : SELECT permissions utilisateur
activate DB
DB --> SecurityService : Permissions verifiedes
deactivate DB

alt Habilitations insuffisantes
    SecurityService --> FluxManager : Accès refusé
    deactivate SecurityService
    FluxManager --> Orchestrator : Error autorisation
    Orchestrator --> Gateway : Accès non authorized
    Gateway --> WebUI : Error permissions
    WebUI --> Manager : **Error**: Permissions insuffisantes
    
else Habilitations valides
    SecurityService --> FluxManager : Accès authorized
    deactivate SecurityService
    
    FluxManager -> AuditService : logDébutSessionSignature()
    activate AuditService
    AuditService -> DB : INSERT audit_flux
    AuditService --> FluxManager : OK
    deactivate AuditService
    
    FluxManager --> Orchestrator : Session authorizede
    
    ' Préparation des documints
    Orchestrator -> DocumintService : préparerDocumintsSignature()
    activate DocumintService
    
    DocumintService -> Storage : Récupérer documints client
    activate Storage
    Storage --> DocumintService : Documints à signer
    deactivate Storage
    
    DocumintService -> DocumintService : Ginerate métadonnées\nsignature
    DocumintService -> DocumintService : Préparer format\npour ePad
    
    DocumintService --> Orchestrator : Documints prêts
    deactivate DocumintService
    
    Orchestrator --> Gateway : Session initialisée
    Gateway --> WebUI : Interface signature prête
    WebUI --> Manager : **Session prête**\nDocumints préparés
    
    note over Manager : Session signature\ninitialisée avec success
ind

== Initialisation ePad ==

Manager -> WebUI : Lancer connexion ePad
WebUI -> Gateway : POST /signature/epad/connect

Gateway -> Orchestrator : connecterEPad()

Orchestrator -> SignatureService : initialiserEPad()
activate SignatureService

SignatureService -> ePad : Verify connexion
activate ePad

alt ePad déconnecté ou défaillant
    ePad --> SignatureService : Error connexion
    deactivate ePad
    
    SignatureService -> AuditService : logErrorEPad()
    activate AuditService
    AuditService -> DB : INSERT audit_errors
    AuditService --> SignatureService : OK
    deactivate AuditService
    
    SignatureService --> Orchestrator : ePad unavailable
    deactivate SignatureService
    
    Orchestrator --> Gateway : Error matériel
    Gateway --> WebUI : ePad non connecté
    WebUI --> Manager : **Error**: ePad déconnecté\nVerify matériel
    
    note over Manager : Procédure annulée\nVerify connexion ePad
    
else ePad opérationnel
    ePad --> SignatureService : Connexion OK
    
    SignatureService -> SecurityService : authintifierEPad()
    activate SecurityService
    SecurityService -> HSM : Verify certificat ePad
    activate HSM
    HSM --> SecurityService : Certificat valide
    deactivate HSM
    SecurityService --> SignatureService : ePad authintifié
    deactivate SecurityService
    
    SignatureService -> DocumintService : chargerDocumintsPourEPad()
    activate DocumintService
    DocumintService --> SignatureService : Documints formatés
    deactivate DocumintService
    
    SignatureService -> ePad : Load documints
    ePad --> SignatureService : Documints chargés
    
    SignatureService --> Orchestrator : ePad prêt pour signature
    deactivate SignatureService
    
    Orchestrator --> Gateway : ePad initialisé
    Gateway --> WebUI : ePad connecté et prêt
    WebUI --> Manager : **ePad prêt**\nInviter client à signer
    
    note over Manager : ePad opérationnel\nCliint peut signer
    
    == Processus signature client ==
    
    Manager -> Cliint : Inviter à signer\nsur ePad
    activate Cliint
    
    Cliint -> ePad : Consulter documints
    ePad -> SignatureService : Afficher documints
    activate SignatureService
    
    SignatureService -> AuditService : logConsultationDocumint()
    activate AuditService
    AuditService -> DB : INSERT audit_actions
    AuditService --> SignatureService : OK
    deactivate AuditService
    
    SignatureService --> ePad : Documints affichés
    ePad --> Cliint : **Documints à signer**\nLecture et validation
    
    note over Cliint : Cliint lit et verifies\nles documints
    
    Cliint -> ePad : Apposer signature\net empreinte
    
    ePad -> SignatureService : Capturer signature
    SignatureService -> SignatureService : Traiter données\nsignature biométriques
    
    alt Capture signature partielle/invalide
        SignatureService -> ValidationService : validerSignature()
        activate ValidationService
        ValidationService --> SignatureService : Signature incomplète
        deactivate ValidationService
        
        SignatureService -> AuditService : logEchecSignature()
        activate AuditService
        AuditService -> DB : INSERT audit_errors
        AuditService --> SignatureService : OK
        deactivate AuditService
        
        SignatureService --> ePad : Request nouvelle signature
        ePad --> Cliint : **Signature incorrecte**\nRecommincer
        
        note over Cliint : Signature à refaire\nQualité insuffisante
        
    else Signature valide et complète
        SignatureService -> ValidationService : validerSignature()
        activate ValidationService
        ValidationService -> ValidationService : Control qualité\nsignature
        ValidationService -> ValidationService : Verify integrity\nempreinte
        ValidationService --> SignatureService : Signature valide
        deactivate ValidationService
        
        ' Intégration et archivage
        SignatureService -> DocumintService : integrerSignature()
        activate DocumintService
        
        DocumintService -> HSM : Horodater signature
        activate HSM
        HSM --> DocumintService : Horodatage sécurisé
        deactivate HSM
        
        DocumintService -> DocumintService : Ginerate documint\nsigné final
        DocumintService -> Storage : Archive documint signé
        activate Storage
        Storage --> DocumintService : Documint archivé
        deactivate Storage
        
        DocumintService -> DB : INSERT signature_log
        activate DB
        DB --> DocumintService : Signature inregistrée
        deactivate DB
        
        DocumintService --> SignatureService : Documint finalisé
        deactivate DocumintService
        
        ' Audit et notification
        SignatureService -> AuditService : logSignatureReussie()
        activate AuditService
        AuditService -> DB : INSERT audit_actions
        AuditService --> SignatureService : OK
        deactivate AuditService
        
        SignatureService -> NotificationService : notifierSignature()
        activate NotificationService
        NotificationService --> SignatureService : Notification invoyée
        deactivate NotificationService
        
        SignatureService --> ePad : Signature finalisée
        ePad --> Cliint : **Signature successfule**\nDocumints signés
        deactivate Cliint
        
        SignatureService --> Orchestrator : Signature complète
        deactivate SignatureService
        
        Orchestrator --> Gateway : Processus completed
        Gateway --> WebUI : Signature successfule
        WebUI --> Manager : **Success**: Documints signés\net archivés
        
        note over Manager : Signature électronique\nfinalisée avec success
    ind
ind

== Finalisation session ==

Orchestrator -> FluxManager : terminerFluxSignature()
FluxManager -> SignatureService : nettoyerSessionEPad()
activate SignatureService
SignatureService -> ePad : Effacer données temporaires
ePad --> SignatureService : Nettoyage effectué
deactivate ePad
SignatureService --> FluxManager : Session fermée
deactivate SignatureService

FluxManager -> AuditService : logFinFlux()
activate AuditService
AuditService -> DB : UPDATE audit_flux
AuditService --> FluxManager : OK
deactivate AuditService

FluxManager --> Orchestrator : Flux completed
deactivate FluxManager
deactivate Orchestrator

deactivate Gateway
deactivate WebUI
deactivate Manager

note over HSM : Signatures horodatées\net sécurisées conformémint\naux standards PKI

@enduml
