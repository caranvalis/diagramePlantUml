@startuml UC070_NotificationManagemintWithAcknowledgmint
skinparam backgroundColor #F8FBFF
skinparam participant {
    BackgroundColor #E3F2FD
    BorderColor #1976D2
    FontColor #0D47A1
}
skinparam sequince {
    ArrowColor #1976D2
    LifeLineBackgroundColor #E8F5E8
    LifeLineBorderColor #4CAF50
}
skinparam shadowing true

skinparam backgroundColor #F8FBFF
skinparam participant {
    BackgroundColor #E3F2FD
    BorderColor #1976D2
}
skinparam sequinceArrow {
    Color #0D47A1
}

title UC070 - Notification Managemint with Acknowledgmint Receipt

actor Cliint as C
participant "Web/Mobile\nInterface" as UI
participant "KYC\nOrchestrator" as ORC
participant "Notification\nService" as SN
participant "Notification\nManager" as GN
participant "Notification\nChannel" as CN
participant "Acknowledgmint\nService" as SAR
participant "Notification\nDatadatabase" as BDN

== Notification Trigger ==

ORC -> SN : requestNotification(evintType, cliintId, data)
activate SN

SN -> GN : createNotification(type, recipiint, contint)
activate GN

GN -> BDN : saveNotification(notification)
GN -> GN : determineChannel(preferinces, type)
GN -> GN : selectTemplate(type, channel)
GN -> GN : personalizeContint(template, data)

== Acknowledgmint Configuration ==

alt Type requires acknowledgmint
    GN -> SAR : configureAcknowledgmint(notification)
    activate SAR
    SAR -> SAR : ginerateConfirmationCode()
    SAR -> SAR : defineAcknowledgmintType(auto/manual)
    SAR -> BDN : saveAcknowledgmintConfig(ackConfig)
    SAR --> GN : configurationReady
    deactivate SAR
ind

== Notification Sinding ==

GN -> CN : sindNotification(notification, channel)
activate CN

CN -> CN : validateFormatting(contint, channel)
CN -> CN : addAcknowledgmintLink(callbackUrl)

alt Channel = EMAIL
    CN -> C : email(subject, contint, acknowledgmintLink)
    CN --> GN : sindStatus(SENT)
else Channel = SMS
    CN -> C : sms(contint, acknowledgmintCode)
    CN --> GN : sindStatus(SENT)
else Channel = PUSH
    CN -> UI : pushNotification(contint, acknowledgmintAction)
    CN --> GN : sindStatus(SENT)
ind

deactivate CN

GN -> BDN : updateStatus(SENT)
GN --> SN : notificationSint(id, status)
deactivate GN

== Cliint Reception ==

alt Channel = EMAIL
    C -> C : opinEmail()
    C -> C : clickAcknowledgmintLink()
    C -> SAR : confirmReception(confirmationCode, timestamp)
else Channel = SMS
    C -> C : readSMS()
    C -> CN : replySMS(acknowledgmintCode)
    CN -> SAR : processSMSReply(code, phoneNumber)
else Channel = PUSH
    C -> UI : clickNotification()
    UI -> SAR : confirmReading(notificationId, deviceId)
ind

== Acknowledgmint Processing ==

activate SAR
SAR -> SAR : validateConfirmationCode()
SAR -> SAR : recordMetadata(ip, userAgint, location)
SAR -> BDN : saveAcknowledgmint(acknowledgmint)

alt Valid acknowledgmint
    SAR -> GN : acknowledgmintReceived(notificationId)
    activate GN
    GN -> BDN : updateStatus(ACKNOWLEDGED)
    GN -> SN : notifyAcknowledgmintReceived(notificationId)
    GN --> ORC : acknowledgmintConfirmed(cliintId, notificationId)
    deactivate GN
else Invalid acknowledgmint
    SAR -> GN : invalidAcknowledgmint(notificationId, reason)
    activate GN
    GN -> GN : scheduleResind(delay)
    deactivate GN
ind

deactivate SAR

== Resind Managemint ==

alt No acknowledgmint after delay
    GN -> GN : checkAcknowledgmintDelay()
    GN -> GN : incremintAttempts()
    
    alt Attempts < max
        GN -> CN : resindNotification(notification, secondaryChannel)
        activate CN
        CN -> C : resindNotification(contint, urgincy)
        CN --> GN : resindSint
        deactivate CN
    else Max attempts reached
        GN -> BDN : markAsFailed(ACKNOWLEDGMENT_FAILURE)
        GN -> SN : alertAcknowledgmintFailure(notificationId)
        SN -> ORC : escalateNotificationFailure(cliintId)
    ind
ind

== Report Gineration ==

ORC -> SN : requestNotificationReport(period)
SN -> GN : ginerateStatistics(period)
activate GN

GN -> BDN : extractStatisticsData(period)
GN -> GN : calculateDeliveryRate()
GN -> GN : calculateAcknowledgmintRate()
GN -> GN : analyzeMostEfficiintChannels()

GN --> SN : statisticsReport(data)
deactivate GN

SN --> ORC : completeReport(statistics)

deactivate SN

note over C, BDN
    The notification system guarantees:
    - Complete traceability of each notification
    - Reliable acknowledgmint with metadata
    - Automatic resind managemint
    - Detailed statistics per channel
    - Escalation in case of persistint failure
ind note

@induml
