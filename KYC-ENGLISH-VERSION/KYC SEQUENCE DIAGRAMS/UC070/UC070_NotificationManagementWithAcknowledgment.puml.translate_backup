@startuml UC070_NotificationManagementWithAcknowledgment
skinparam backgroundColor #F8FBFF
skinparam participant {
    BackgroundColor #E3F2FD
    BorderColor #1976D2
    FontColor #0D47A1
}
skinparam sequence {
    ArrowColor #1976D2
    LifeLineBackgroundColor #E8F5E8
    LifeLineBorderColor #4CAF50
}
skinparam shadowing true

skinparam backgroundColor #F8FBFF
skinparam participant {
    BackgroundColor #E3F2FD
    BorderColor #1976D2
}
skinparam sequenceArrow {
    Color #0D47A1
}

title UC070 - Notification Management with Acknowledgment Receipt

actor Client as C
participant "Web/Mobile\nInterface" as UI
participant "KYC\nOrchestrator" as ORC
participant "Notification\nService" as SN
participant "Notification\nManager" as GN
participant "Notification\nChannel" as CN
participant "Acknowledgment\nService" as SAR
participant "Notification\nDatabase" as BDN

== Notification Trigger ==

ORC -> SN : requestNotification(eventType, clientId, data)
activate SN

SN -> GN : createNotification(type, recipient, content)
activate GN

GN -> BDN : saveNotification(notification)
GN -> GN : determineChannel(preferences, type)
GN -> GN : selectTemplate(type, channel)
GN -> GN : personalizeContent(template, data)

== Acknowledgment Configuration ==

alt Type requires acknowledgment
    GN -> SAR : configureAcknowledgment(notification)
    activate SAR
    SAR -> SAR : generateConfirmationCode()
    SAR -> SAR : defineAcknowledgmentType(auto/manual)
    SAR -> BDN : saveAcknowledgmentConfig(ackConfig)
    SAR --> GN : configurationReady
    deactivate SAR
end

== Notification Sending ==

GN -> CN : sendNotification(notification, channel)
activate CN

CN -> CN : validateFormatting(content, channel)
CN -> CN : addAcknowledgmentLink(callbackUrl)

alt Channel = EMAIL
    CN -> C : email(subject, content, acknowledgmentLink)
    CN --> GN : sendStatus(SENT)
else Channel = SMS
    CN -> C : sms(content, acknowledgmentCode)
    CN --> GN : sendStatus(SENT)
else Channel = PUSH
    CN -> UI : pushNotification(content, acknowledgmentAction)
    CN --> GN : sendStatus(SENT)
end

deactivate CN

GN -> BDN : updateStatus(SENT)
GN --> SN : notificationSent(id, status)
deactivate GN

== Client Reception ==

alt Channel = EMAIL
    C -> C : openEmail()
    C -> C : clickAcknowledgmentLink()
    C -> SAR : confirmReception(confirmationCode, timestamp)
else Channel = SMS
    C -> C : readSMS()
    C -> CN : replySMS(acknowledgmentCode)
    CN -> SAR : processSMSReply(code, phoneNumber)
else Channel = PUSH
    C -> UI : clickNotification()
    UI -> SAR : confirmReading(notificationId, deviceId)
end

== Acknowledgment Processing ==

activate SAR
SAR -> SAR : validateConfirmationCode()
SAR -> SAR : recordMetadata(ip, userAgent, location)
SAR -> BDN : saveAcknowledgment(acknowledgment)

alt Valid acknowledgment
    SAR -> GN : acknowledgmentReceived(notificationId)
    activate GN
    GN -> BDN : updateStatus(ACKNOWLEDGED)
    GN -> SN : notifyAcknowledgmentReceived(notificationId)
    GN --> ORC : acknowledgmentConfirmed(clientId, notificationId)
    deactivate GN
else Invalid acknowledgment
    SAR -> GN : invalidAcknowledgment(notificationId, reason)
    activate GN
    GN -> GN : scheduleResend(delay)
    deactivate GN
end

deactivate SAR

== Resend Management ==

alt No acknowledgment after delay
    GN -> GN : checkAcknowledgmentDelay()
    GN -> GN : incrementAttempts()
    
    alt Attempts < max
        GN -> CN : resendNotification(notification, secondaryChannel)
        activate CN
        CN -> C : resendNotification(content, urgency)
        CN --> GN : resendSent
        deactivate CN
    else Max attempts reached
        GN -> BDN : markAsFailed(ACKNOWLEDGMENT_FAILURE)
        GN -> SN : alertAcknowledgmentFailure(notificationId)
        SN -> ORC : escalateNotificationFailure(clientId)
    end
end

== Report Generation ==

ORC -> SN : requestNotificationReport(period)
SN -> GN : generateStatistics(period)
activate GN

GN -> BDN : extractStatisticsData(period)
GN -> GN : calculateDeliveryRate()
GN -> GN : calculateAcknowledgmentRate()
GN -> GN : analyzeMostEfficientChannels()

GN --> SN : statisticsReport(data)
deactivate GN

SN --> ORC : completeReport(statistics)

deactivate SN

note over C, BDN
    The notification system guarantees:
    - Complete traceability of each notification
    - Reliable acknowledgment with metadata
    - Automatic resend management
    - Detailed statistics per channel
    - Escalation in case of persistent failure
end note

@enduml
