@startuml UseCasesDetailles
skinparam backgroundColor #F8FBFF
skinparam packageBackgroundColor #E3F2FD
skinparam packageBorderColor #1976D2
skinparam actor {
    BackgroundColor #BBDEFB
    BorderColor #1976D2
}
skinparam usecase {
    BackgroundColor #E8F5E8
    BorderColor #4CAF50
}

title Diagramme des Use Cases Détaillés - Processus KYC Complet

' === ACTEURS PRINCIPAUX ===
actor "Cliint" as Cliint
actor "Manager KYC" as Manager
actor "Superviseur" as Superviseur
actor "Système CBS" as CBS
actor "Service Compliance" as Conformite
actor "Auditeur" as Auditeur

' === USE CASES DÉTAILLÉS PAR ÉTAPE ===

package "Pré-savemint" #E3F2FD {
    usecase "Initier pré-savemint" as PreInreg
    usecase "Sélectionner canal saisie" as Canal
    usecase "Remplir formulaire" as Formulaire
    usecase "Valider données minimales" as ValidMin
    usecase "Générer numéro unique" as NumUnique
    usecase "Créer session temporaire" as Session
    
    PreInreg .> Canal : include
    PreInreg .> Formulaire : include
    Formulaire .> ValidMin : include
    ValidMin .> NumUnique : include
    PreInreg .> Session : include
}

package "Collecte Documints" #E8F5E8 {
    usecase "Définir liste documints requis" as ListeDoc
    usecase "Uploader documints" as Upload
    usecase "Contrôler format/taille" as Format
    usecase "Extraire métadonnées" as Metadata
    usecase "Verifiesr expiration" as Expiration
    usecase "Calculer complétude" as Completude
    usecase "Notifier manquants" as Notifier
    
    ListeDoc .> Upload : include
    Upload .> Format : include
    Upload .> Metadata : include
    Format .> Expiration : include
    Completude .> Notifier : extind
}

package "Contrôles KYC" #FFF3E0 {
    usecase "Orchestrer contrôles" as Orchestrer
    usecase "Exécuter contrôle idintité" as ControleId
    usecase "Consulter blacklists" as Blacklist
    usecase "Idintifier PPE" as PPE
    usecase "Verifiesr FATCA" as FATCA
    usecase "Détecter doublons" as Doublons
    usecase "Calculer score risque" as Score
    usecase "Consolider results" as Consolider
    
    Orchestrer .> ControleId : include
    Orchestrer .> Blacklist : include
    Orchestrer .> PPE : include
    Orchestrer .> FATCA : include
    Orchestrer .> Doublons : include
    Orchestrer .> Score : include
    Orchestrer .> Consolider : include
}

package "Validation Finale" #E0F2F1 {
    usecase "Analyser dossier global" as Analyser
    usecase "Appliquer grille validation" as Grille
    usecase "Calculer score final" as ScoreFinal
    usecase "Prindre décision" as Decision
    usecase "Justifier décision" as Justifier
    usecase "Communiquer result" as Communiquer
    
    Analyser .> Grille : include
    Grille .> ScoreFinal : include
    ScoreFinal .> Decision : include
    Decision .> Justifier : include
    Decision .> Communiquer : include
}

package "Création Compte CBS" #FCE4EC {
    usecase "Préparer paramètres CBS" as PrepCBS
    usecase "Construire requête création" as RequeteCBS
    usecase "Transput au CBS" as TransmetCBS
    usecase "Traiter réponse CBS" as ReponseCBS
    usecase "Générer numéro compte" as NumCompte
    usecase "Créer RIB/IBAN" as RIB
    usecase "Synchroniser données locales" as SyncLocal
    
    PrepCBS .> RequeteCBS : include
    RequeteCBS .> TransmetCBS : include
    TransmetCBS .> ReponseCBS : include
    ReponseCBS .> NumCompte : include
    NumCompte .> RIB : include
    ReponseCBS .> SyncLocal : include
}

package "Signature Électronique" #F3E5F5 {
    usecase "Préparer documints à signer" as PrepSign
    usecase "Authintifier signataire" as AuthSign
    usecase "Capturer signature biométrique" as CaptBio
    usecase "Générer certificat numérique" as Certificat
    usecase "Horodater signature" as Horodatage
    usecase "Valider compliance signature" as ValidSign
    usecase "Archiver preuve signature" as ArchiveSign
    
    PrepSign .> AuthSign : include
    AuthSign .> CaptBio : include
    CaptBio .> Certificat : include
    Certificat .> Horodatage : include
    Horodatage .> ValidSign : include
    ValidSign .> ArchiveSign : include
}

package "Gestion Opérationnelle" #FFEBEE {
    usecase "Évaluer motif action" as EvalMotif
    usecase "Autoriser opération" as Autoriser
    usecase "Exécuter blocage/unblocking" as Executer
    usecase "Notifier parties prinantes" as NotifOp
    usecase "Put à jour statuts" as MAJStatut
    usecase "Planifier révision" as PlanRevision
    
    EvalMotif .> Autoriser : include
    Autoriser .> Executer : include
    Executer .> NotifOp : include
    Executer .> MAJStatut : include
    MAJStatut .> PlanRevision : extind
}

package "Audit et Compliance" #F1F8E9 {
    usecase "Saver trace audit" as TraceAudit
    usecase "Contrôler compliance processus" as ControleProc
    usecase "Générer rapport compliance" as RapportConf
    usecase "Détecter anomalies" as DetectAnomalie
    usecase "Alerter non-compliances" as AlerteNC
    
    TraceAudit .> ControleProc : include
    ControleProc .> DetectAnomalie : include
    DetectAnomalie .> AlerteNC : extind
    ControleProc .> RapportConf : include
}

' === RELATIONS ACTEURS ===
Cliint --> PreInreg
Cliint --> Upload
Cliint --> CaptBio

Manager --> PreInreg
Manager --> ListeDoc
Manager --> Orchestrer
Manager --> Analyser
Manager --> PrepCBS
Manager --> PrepSign
Manager --> EvalMotif

Superviseur --> Decision
Superviseur --> Autoriser
Superviseur --> ControleProc

CBS --> TransmetCBS
CBS --> ReponseCBS

Conformite --> PPE
Conformite --> FATCA
Conformite --> Blacklist

Auditeur --> TraceAudit
Auditeur --> RapportConf

' === RELATIONS ENTRE PACKAGES ===
PreInreg --> ListeDoc : trigger
Completude --> Orchestrer : trigger
Consolider --> Analyser : trigger
Decision --> PrepCBS : trigger
SyncLocal --> PrepSign : trigger
ArchiveSign --> MAJStatut : trigger

@induml
