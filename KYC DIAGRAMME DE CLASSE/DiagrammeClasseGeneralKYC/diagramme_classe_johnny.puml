@startuml D_CLASSE_13_JUIN
skinparam linetype polyline
skinparam backgroundColor #F8FBFF
skinparam classBackgroundColor #E3F2FD
skinparam classBorderColor #1976D2
skinparam classFontColor #0D47A1
skinparam classFontSize 13
skinparam classAttributeFontSize 12
skinparam classMethodFontSize 12
skinparam classAttributeIconSize 0
skinparam shadowing true
skinparam roundCorner 15
skinparam nodesep 40
skinparam ranksep 30
left to right direction

abstract class Client {
  - id: String
  - numeroNIU: String
  - adresse: String
  - telephone: String
  - email: String
  - nationalite: String
  - personneAContacter: String
  - statut: StatutClient
  - dateCreation: Date
  - dateMiseAJour: Date
  - profilClient: ProfilClient
  - categorieInterne: String
  - categorieBanqueCentrale: String
  - secteurActivite: String
  - estBloque: Boolean
  - estPPE: Boolean
  - estFATCA: Boolean
  - pays: Pays
  + creer(): Boolean
  + modifier(): Boolean
  + bloquer(): Boolean
  + debloquer(): Boolean
  + validerIdentite(): Boolean
}

class ClientParticulier extends Client {
  - nom: String
  - prenoms: String
  - dateNaissance: Date
  - lieuNaissance: String
  - nomPere: String
  - nomMere: String
  - numeroCNI: String
  - dateLivraisonCNI: Date
  - lieuLivraisonCNI: String
  - trancheRevenus: String
  - nomEmployeur: String
  + preEnregistrer(): String
  + genererFicheKYC(): Document
}

class ClientEntreprise extends Client {
  - raisonSociale: String
  - dateCreation: Date
  - numeroRCCM: String
  - capitalSocial: BigDecimal
  - chiffreAffaire: BigDecimal
  - effectif: Integer
  - gerant: ClientParticulier
  - estEnOppositionParDefaut: Boolean
  + gererActionnariat(): Boolean
  + validerGerant(): Boolean
}

class Mandataire {
  - id: String
  - clientParticulier: ClientParticulier
  - typeMandataire: TypeMandataire
  - numeroMandataire: String
  - dateDebut: Date
  - dateFin: Date
  - pouvoirs: String
  - statut: StatutMandataire
  - documentMandataire: Document
  + creer(): Boolean
  + modifier(): Boolean
  + revoquer(): Boolean
  + validerPouvoirs(): Boolean
  + verifierValidite(): Boolean
}

class Pays {
  - code: String
  - nom: String
  - langue: String
  - formatDate: String
  - reglementations: List<Reglementation>
  - listeSanctions: String
  + appliquerReglementation(): Boolean
  + verifierSanctions(): Boolean
}

class Compte {
  - numeroCompte: String
  - suffixeCompte: String
  - codeAgence: String
  - codeDevise: String
  - chapitreComptable: String
  - cleControleCompte: String
  - intituleCompte: String
  - codeService: String
  - sensCompte: SensCompte
  - typeCompte: TypeCompte
  - statut: StatutCompte
  - dateCreation: Date
  - dateCloturation: Date
  - rib: RIB
  + creerDansCBS(): Boolean
  + cloturerDansCBS(): Boolean
  + bloquer(): Boolean
  + debloquer(): Boolean
}

class Document {
  - id: String
  - nom: String
  - typeDocument: TypeDocument
  - chemin: String
  - taille: Long
  - checksum: String
  - dateUpload: Date
  - dateExpiration: Date
  - version: Integer
  - statut: StatutDocument
  - estObligatoire: Boolean
  + valider(): Boolean
  + verifierExpiration(): Boolean
  + verifierAuthenticite(): Boolean
  + archiver(): Boolean
}

class Archives {
  - id: String
  - document: Document
  - planClassification: PlanClassification
  - codeRangement: String
  - emplacement: String
  - dateArchivage: Date
  - dureeConservation: Integer
  + archiver(): Boolean
  + rechercher(): List<Document>
  + restaurer(): Boolean
}

class PlanClassification {
  - id: String
  - pays: Pays
  - typeClient: TypeClient
  - arborescence: String
  - codeClassification: String
  - regleDenommage: String
  + genererCode(): String
  + organiserDocuments(): Boolean
}

abstract class Controle {
  - id: String
  - nom: String
  - description: String
  - priorite: Integer
  - estActif: Boolean
  + executer(): ResultatControle
  + valider(): Boolean
}

class TypeControle {
  - id: String
  - nom: String
  - description: String
  + Creer()
  + modifier()
  + suspendre()
}

class ControleIdentite extends Controle {
  + validerDocuments(): Boolean
  + detecterDoublons(): Boolean
  + verifierDatesExpiration(): Boolean
}

class ControleConformite extends Controle {
  + verifierBlacklist(): Boolean
  + identifierPPE(): Boolean
  + controlerCompletude(): Boolean
  + verifierFATCA(): Boolean
}

class Parcours {
  - id: String
  - nom: String
  - description: String
  - typeClient: TypeClient
  - typeCompte: TypeCompte
  - version: Integer
  - dateCreation: Date
  - dateMiseAJour: Date
  - estActif: Boolean
  - createur: Utilisateur
  - dureeEstimee: Integer
  + creer(): Boolean
  + modifier(): Boolean
  + activer(): Boolean
  + desactiver(): Boolean
  + dupliquer(): Parcours
  + calculerDuree(): Integer
}

class Etape {
  - id: String
  - nom: String
  - description: String
  - ordre: Integer
  - parcours: Parcours
  - typeEtape: TypeEtape
  - acteurResponsable: TypeActeur
  - dureeEstimee: Integer
  - estObligatoire: Boolean
  - estParallele: Boolean
  - conditionActivation: String
  - actionSuivante: String
  + executer(): Boolean
  + valider(): Boolean
  + rejeter(): String
  + escalader(): Boolean
  + calculerDelai(): Integer
  + verifierConditions(): Boolean
}

class Notification {
  - id: String
  - titre: String
  - contenu: String
  - typeNotification: TypeNotification
  - priorite: PrioriteNotification
  - statut: StatutNotification
  - dateCreation: Date
  - dateEnvoi: Date
  - dateLecture: Date
  - destinataire: String
  - expediteur: Utilisateur
  - etape: Etape
  + creer(): Boolean
  + envoyer(): Boolean
  + marquerCommelue(): Boolean
  + programmer(): Boolean
  + annuler(): Boolean
}

class Message {
  - id: String
  - notification: Notification
  - canal: Canal
  - contenuFormate: String
  - adresseDestinataire: String
  - statutEnvoi: StatutEnvoi
  - dateEnvoi: Date
  - dateReception: Date
  - nombreTentatives: Integer
  - codeErreur: String
  + formaterContenu(): String
  + envoyer(): Boolean
  + reessayer(): Boolean
  + confirmerReception(): Boolean
}

class TypeNotification {
  - id: String
  - code: String
  - libelle: String
  - description: String
  - template: String
  - estActif: Boolean
  - canauxAutorises: List<Canal>
  + creerTemplate(): String
  + validerTemplate(): Boolean
  + appliquerTemplate(): String
}

class Canal {
  - id: String
  - nom: String
  - typeCanal: TypeCanal
  - configuration: String
  - estActif: Boolean
  - priorite: Integer
  - limiteEnvoi: Integer
  - coutParMessage: BigDecimal
  + configurer(): Boolean
  + tester(): Boolean
  + envoyer(message: Message): Boolean
  + verifierDisponibilite(): Boolean
}

class Referentiel {
  - id: String
  - nom: String
  - description: String
  - typeReferentiel: TypeReferentiel
  - domaineApplication: DomaineApplication
  - version: Integer
  - dateCreation: Date
  - dateMiseAJour: Date
  - estActif: Boolean
  - pays: Pays
  - regleMetier: String
  + creer(): Boolean
  + modifier(): Boolean
  + valider(): Boolean
  + publier(): Boolean
  + archiver(): Boolean
  + appliquerRegle(): Boolean
}

class TypeReferentiel {
  - id: String
  - code: String
  - libelle: String
  - description: String
  - categorie: String
  - estObligatoire: Boolean
  - periodiciteRevision: Integer
  + definirRegle(): Boolean
  + validerCoherence(): Boolean
}

class DomaineApplication {
  - id: String
  - nom: String
  - description: String
  - perimetre: String
  - responsable: String
  - dateDebut: Date
  - dateFin: Date
  - estActif: Boolean
  + appliquer(): Boolean
  + validerPerimetre(): Boolean
  + etendre(): Boolean
}

class Utilisateur {
  - id: String
  - login: String
  - motDePasseHash: String
  - nom: String
  - prenoms: String
  - email: String
  - telephone: String
  - role: Role
  - agence: String
  - estActif: Boolean
  - derniereConnexion: Date
  + authentifier(): Boolean
  + changerMotDePasse(): Boolean
  + autoriser(action: String): Boolean
}

class Role {
  - id: String
  - nom: String
  - description: String
  - habilitations: List<Habilitation>
  + ajouterHabilitation(): Boolean
  + retirerHabilitation(): Boolean
}

class Habilitation {
    - id: String
    - nom: String
    - module: String
    - action: String
    - ressource: String
}

class JournalAudit {
  - id: String
  - utilisateur: Utilisateur
  - action: String
  - ressource: String
  - ancienneValeur: String
  - nouvelleValeur: String
  - adresseIP: String
  - dateAction: Date
  - estImmuable: Boolean
  + enregistrer(): Boolean
  + consulter(): List<JournalAudit>
}

class TypeCompte {
    - id: String
    - code: String
    - libelle: String
    - description: String
    - devise: String
    - plafond: BigDecimal
    - decouvertAutorise: Boolean
    - fraisGestion: BigDecimal
    - dateCreation: Date
    - estActif: Boolean
    + creer(): Boolean
    + modifier(): Boolean
    + activer(): Boolean
    + desactiver(): Boolean
}

class Profil {
    - id: String
    - nom: String
    - description: String
    - droits: List<Habilitation>
    - dateCreation: Date
    - estActif: Boolean
    + ajouterDroit(Habilitation): Boolean
    + retirerDroit(Habilitation): Boolean
    + activer(): Boolean
    + desactiver(): Boolean
}

class Actionnaire {
    - id: String
    - nom: String
    - prenom: String
    - typePersonne: String
    - nationalite: String
    - numeroPieceIdentite: String
    - partCapital: Double
    - pourcentageDetention: Double
    - dateEntree: Date
    - adresse: String
    - telephone: String
    - estDirigeant: Boolean
    - fonctionDansEntreprise: String
    + ajouterActionnaire(): void
    + modifierPartCapital(): void
    + supprimerActionnaire(): void
    + mettreAJourInformations(): void
    + verifierConformiteActionnaire(): Boolean
}

enum StatutClient {
    ACTIF
    INACTIF
    BLOQUE
    SUSPENDU
    EN_ATTENTE
    ARCHIVE
}

' ===== RELATIONS AVEC CARDINALITÃ‰S =====

' Relations Client
Client "1" -- "0..*" Compte : comptes
Client "1" -- "0..*" Document : documents
ClientParticulier "1" -- "0..*" Mandataire : mandataires
Client "1" -- "1" StatutClient : statut
' ClientEntreprise "1" -- "0..*" ClientParticulier
' ClientEntreprise "1" -- "1" ClientParticulier

' Relations Parcours et Ã‰tapes
Parcours "1" -- "1..*" Etape : etapes

' Relations Ã‰tapes
Etape "1" -- "0..*" Controle
Etape "1" -- "0..*" Notification
Etape "0..*" -- "0..1" Client
Etape "0..*" -- "0..1" Compte

' Relations ContrÃ´les
TypeControle "1" -- "0..*" Controle

' Relations Notifications
Notification "1" -- "0..*" Message : messages
Notification "1" -- "0..*" Canal : canaux
Notification "1" -- "0..*" TypeNotification : types

' Relations RÃ©fÃ©rentiel
Referentiel "0..*" -- "1" TypeReferentiel
Referentiel "0..*" -- "1" DomaineApplication
Referentiel "0..*" -- "1" Pays

' Relations Utilisateur
Utilisateur "0..*" -- "0..1" Profil : profil
Utilisateur "0..*" -- "0..*" Role : roles
Utilisateur "1..*" -- "1" Etape
Role "1" -- "0..*" Habilitation : habilitations

' Relations Archives
Document "0..*" -- "0..1" Archives : archive
Archives "0..*" -- "1" PlanClassification : classification

' Relations Pays
Client "0..*" -- "1" Pays : pays
Pays "1" -- "0..*" Reglementation : reglementations

' Relations Compte
Compte "1" -- "1" TypeCompte : type

' Relations ClientEntreprise et Actionnaire
ClientEntreprise "1" -- "0..*" Actionnaire : actionnaires

@enduml